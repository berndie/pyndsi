[build-system]
requires = ["setuptools", "wheel", "numpy", "Cython", "pkgconfig"]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
skip = "{cp,pp}27-* {cp,pp}35-* pp* *win32 *_aarch64 *_ppc64le *_s390x *_i686"
test-skip = "*-macosx_arm64 *-macosx_universal2:arm64"

build-frontend = "build"
before-build = "python scripts/fetch-ffmpeg /tmp/vendor"

test-command = "pytest {package}/tests"
before-test = ""
test-requires = ["pytest"]
test-extras = []

manylinux-x86_64-image = "manylinux2014"

[tool.cibuildwheel.linux]
before-all = "yum install -y nasm && bash -euxo pipefail scripts/fetch_libjpeg-turbo.sh"

[tool.cibuildwheel.linux.environment]
LD_LIBRARY_PATH="/tmp/libjpeg-turbo-build/lib:/tmp/vendor/lib:$LD_LIBRARY_PATH"
PKG_CONFIG_PATH="/tmp/libjpeg-turbo-build/lib/pkgconfig:/tmp/vendor/lib/pkgconfig"

[tool.cibuildwheel.macos]
archs = ["x86_64 arm64"]
before-all = "bash -euxo pipefail scripts/fetch_libjpeg-turbo.sh"

[tool.cibuildwheel.macos.environment]
LDFLAGS="-headerpad_max_install_names"
PKG_CONFIG_PATH="/tmp/libjpeg-turbo-build/lib/pkgconfig:/tmp/vendor/lib/pkgconfig"

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel && python scripts\\fetch-ffmpeg C:\\cibw\\vendor"
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel} --add-path C:\\cibw\\vendor\\bin"