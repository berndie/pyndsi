name: CI Build

on: [push, pull_request]

jobs:
  black_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Black Check
        uses: jpetrucciani/black-check@20.8b1

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: [black_check]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]

    steps:
      - uses: actions/checkout@v2

      - name: Install packages on macOS
        if: contains(matrix.os, 'macos')
        run: |
          brew update
          brew install pkg-config nasm

      - name: Download libjpeg-turbo for Windows
        if: contains(matrix.os, 'windows')
        run: |
          [System.IO.Directory]::CreateDirectory('C:\cibw')
          Invoke-WebRequest -Uri ${{ env.LIBJPEG_TURBO_URL }} -OutFile "C:\cibw\libjpeg-turbo.exe"
        env:
          LIBJPEG_TURBO_URL: "https://github.com/pupil-labs/pyndsi/wiki/libjpeg-turbo-2.1.0-vc64.exe"
      - name: Install libjpeg-turbo for Windows
        if: contains(matrix.os, 'windows')
        run: C:\cibw\libjpeg-turbo.exe /S /D="C:\cibw\libjpeg-turbo-build"

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.1.3

      - uses: actions/upload-artifact@v2
        with:
          name: distribution
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    needs: [black_check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Build source package
        run: |
          pip install build
          python -m build --sdist .
      - name: Upload source package
        uses: actions/upload-artifact@v2
        with:
          name: distribution
          path: dist/


  publish:
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: distribution
          path: dist/
      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}